---
- hosts: localservers
  remote_user: vagrant
  sudo: yes
  tasks:
  - name: Enable PHP5.4 Repo from Ondrej
    apt_repository: repo='deb http://ppa.launchpad.net/ondrej/php5-oldstable/ubuntu precise main' state=present
  - name: Ensure apt-get is updated
    apt: update_cache=yes
  - name: Install NodeJS
    apt: name=nodejs state=present
  - name: Install NPM
    apt: name=npm state=present
  - name: Install CURL
    apt: name=curl state=present
  - name: Install VIM
    apt: name=vim state=present

- hosts: apache
  remote_user: vagrant
  sudo: yes
  tasks:
  - name: Ensure Apache Installed
    apt: name=apache2 state=present

  - name: Install PHP and its Modules
    apt: name={{ item }} state=latest force=yes
    with_items:
      - php5
      - php5-mysql
      - php5-gd
      - php5-curl
      - php5-mcrypt

  - name: Enable Various Apache Modules
    command: a2enmod auth_basic deflate env expires headers php5 rewrite setenvif vhost_alias


# These can be enabled w/ ansible 1.6
#    apache2_module: state=present name=vhost
#    apache2_module: state=present name=headers


  - name: Copy Vhost Definition over
    copy: src=templates/vhosts.conf dest=/etc/apache2/conf.d/vhost.conf


  - name: Ensure Apache Started
    service: name=apache2 state=running enabled=yes

  - name: Restart Apache
    command: apachectl restart



  - name: Install MySQL Server
    apt: name=mysql-server state=present

  - name: Copy MySQL AppArmor template over so mysql can use /mysql-data directory
    sudo: yes
    copy: src=templates/usr.sbin.mysqld dest=/etc/apparmor.d/usr.sbin.mysqld backup=yes

  - name: Change some of the grub bootloader configs to never prompt for how to boot
    sudo: yes
    lineinfile: dest=/etc/default/grub regexp=^GRUB_TIMEOUT line='GRUB_TIMEOUT=0' backup=yes

  - name: Change some of the grub bootloader configs to never prompt for how to boot
    sudo: yes
    lineinfile: dest=/etc/default/grub regexp=^GRUB_RECORDFAIL_TIMEOUT line='GRUB_RECORDFAIL_TIMEOUT=0' backup=yes


  - name: Ensure we're using the shared datadir for MySQL
    sudo: yes
    lineinfile: dest=/etc/mysql/my.cnf regexp=^datadir line='datadir         = /mysql-data' backup=yes

  - name: Copy DB files over to /mysql-data
    command: sudo su -c "cp -na /var/lib/mysql/* /mysql-data/"

  - name: Ensure AppArmor has the latest config file
    sudo: yes
    command: /etc/init.d/apparmor reload

  - name: Ensure MySQL is started and ready to boot when machine does
    service: name=mysql enabled=yes state=restarted

